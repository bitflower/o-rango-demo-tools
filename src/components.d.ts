/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */


import {
  DemoButtonsComponent as ODemoBarButtons
} from './components/o-demo-bar-buttons/o-demo-bar-buttons';

declare global {
  interface HTMLODemoBarButtonsElement extends ODemoBarButtons, HTMLElement {
  }
  var HTMLODemoBarButtonsElement: {
    prototype: HTMLODemoBarButtonsElement;
    new (): HTMLODemoBarButtonsElement;
  };
  interface HTMLElementTagNameMap {
    "o-demo-bar-buttons": HTMLODemoBarButtonsElement;
  }
  interface ElementTagNameMap {
    "o-demo-bar-buttons": HTMLODemoBarButtonsElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "o-demo-bar-buttons": JSXElements.ODemoBarButtonsAttributes;
    }
  }
  namespace JSXElements {
    export interface ODemoBarButtonsAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  DemoSelectComponent as ODemoBarSelect
} from './components/o-demo-bar-select/o-demo-bar-select';

declare global {
  interface HTMLODemoBarSelectElement extends ODemoBarSelect, HTMLElement {
  }
  var HTMLODemoBarSelectElement: {
    prototype: HTMLODemoBarSelectElement;
    new (): HTMLODemoBarSelectElement;
  };
  interface HTMLElementTagNameMap {
    "o-demo-bar-select": HTMLODemoBarSelectElement;
  }
  interface ElementTagNameMap {
    "o-demo-bar-select": HTMLODemoBarSelectElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "o-demo-bar-select": JSXElements.ODemoBarSelectAttributes;
    }
  }
  namespace JSXElements {
    export interface ODemoBarSelectAttributes extends HTMLAttributes {
      options?: any;
    }
  }
}


import {
  DemoToolbarComponent as ODemoBarToolbar
} from './components/o-demo-bar-toolbar/o-demo-bar-toolbar';

declare global {
  interface HTMLODemoBarToolbarElement extends ODemoBarToolbar, HTMLElement {
  }
  var HTMLODemoBarToolbarElement: {
    prototype: HTMLODemoBarToolbarElement;
    new (): HTMLODemoBarToolbarElement;
  };
  interface HTMLElementTagNameMap {
    "o-demo-bar-toolbar": HTMLODemoBarToolbarElement;
  }
  interface ElementTagNameMap {
    "o-demo-bar-toolbar": HTMLODemoBarToolbarElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "o-demo-bar-toolbar": JSXElements.ODemoBarToolbarAttributes;
    }
  }
  namespace JSXElements {
    export interface ODemoBarToolbarAttributes extends HTMLAttributes {
      name?: string;
      options?: any;
    }
  }
}


import {
  DemoBarComponent as ODemoBar
} from './components/o-demo-bar/o-demo-bar';

declare global {
  interface HTMLODemoBarElement extends ODemoBar, HTMLElement {
  }
  var HTMLODemoBarElement: {
    prototype: HTMLODemoBarElement;
    new (): HTMLODemoBarElement;
  };
  interface HTMLElementTagNameMap {
    "o-demo-bar": HTMLODemoBarElement;
  }
  interface ElementTagNameMap {
    "o-demo-bar": HTMLODemoBarElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "o-demo-bar": JSXElements.ODemoBarAttributes;
    }
  }
  namespace JSXElements {
    export interface ODemoBarAttributes extends HTMLAttributes {
      events?: string[];
      name?: string;
      pattern?: boolean;
    }
  }
}


import {
  DemoCaseComponent as ODemoCase
} from './components/o-demo-case/o-demo-case';

declare global {
  interface HTMLODemoCaseElement extends ODemoCase, HTMLElement {
  }
  var HTMLODemoCaseElement: {
    prototype: HTMLODemoCaseElement;
    new (): HTMLODemoCaseElement;
  };
  interface HTMLElementTagNameMap {
    "o-demo-case": HTMLODemoCaseElement;
  }
  interface ElementTagNameMap {
    "o-demo-case": HTMLODemoCaseElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "o-demo-case": JSXElements.ODemoCaseAttributes;
    }
  }
  namespace JSXElements {
    export interface ODemoCaseAttributes extends HTMLAttributes {
      name?: string;
      scripts?: string;
    }
  }
}


import {
  DemoDevicesComponent as ODemoDevices
} from './components/o-demo-devices/o-demo-devices';

declare global {
  interface HTMLODemoDevicesElement extends ODemoDevices, HTMLElement {
  }
  var HTMLODemoDevicesElement: {
    prototype: HTMLODemoDevicesElement;
    new (): HTMLODemoDevicesElement;
  };
  interface HTMLElementTagNameMap {
    "o-demo-devices": HTMLODemoDevicesElement;
  }
  interface ElementTagNameMap {
    "o-demo-devices": HTMLODemoDevicesElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "o-demo-devices": JSXElements.ODemoDevicesAttributes;
    }
  }
  namespace JSXElements {
    export interface ODemoDevicesAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  DemoResizerComponent as ODemoResizer
} from './components/o-demo-resizer/o-demo-resizer';

declare global {
  interface HTMLODemoResizerElement extends ODemoResizer, HTMLElement {
  }
  var HTMLODemoResizerElement: {
    prototype: HTMLODemoResizerElement;
    new (): HTMLODemoResizerElement;
  };
  interface HTMLElementTagNameMap {
    "o-demo-resizer": HTMLODemoResizerElement;
  }
  interface ElementTagNameMap {
    "o-demo-resizer": HTMLODemoResizerElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "o-demo-resizer": JSXElements.ODemoResizerAttributes;
    }
  }
  namespace JSXElements {
    export interface ODemoResizerAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  DemoSnackbarComponent as ODemoSnackbar
} from './components/o-demo-snackbar/o-demo-snackbar';

declare global {
  interface HTMLODemoSnackbarElement extends ODemoSnackbar, HTMLElement {
  }
  var HTMLODemoSnackbarElement: {
    prototype: HTMLODemoSnackbarElement;
    new (): HTMLODemoSnackbarElement;
  };
  interface HTMLElementTagNameMap {
    "o-demo-snackbar": HTMLODemoSnackbarElement;
  }
  interface ElementTagNameMap {
    "o-demo-snackbar": HTMLODemoSnackbarElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "o-demo-snackbar": JSXElements.ODemoSnackbarAttributes;
    }
  }
  namespace JSXElements {
    export interface ODemoSnackbarAttributes extends HTMLAttributes {
      events?: any;
    }
  }
}

