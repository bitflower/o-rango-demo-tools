/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
/* tslint:disable */

import '@stencil/core';




declare global {
  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}

  namespace StencilComponents {

    interface ODemoBarButtons {

    }

    interface ODemoBarSelect {
      'options': any;
    }

    interface ODemoBarToolbar {
      'name': string;
      'options': any;
    }

    interface ODemoBar {
      'caseOptionSelected': number;
      'device': string;
      'deviceEmulate': boolean;
      'deviceSize': string;
      'events': string[];
      'name': string;
      'pattern': boolean;
    }

    interface ODemoCase {
      'name': string;
    }

    interface ODemoDevices {
      'orientation': string;
    }

    interface ODemoFab {

    }

    interface ODemoResizer {
      'setActiveViewPort': (size?: string) => void;
      'size': string;
      'viewport': string;
    }

    interface ODemoSnackbar {
      'events': any;
    }
  }


    interface HTMLODemoBarButtonsElement extends StencilComponents.ODemoBarButtons, HTMLStencilElement {}

    var HTMLODemoBarButtonsElement: {
      prototype: HTMLODemoBarButtonsElement;
      new (): HTMLODemoBarButtonsElement;
    };
    

    interface HTMLODemoBarSelectElement extends StencilComponents.ODemoBarSelect, HTMLStencilElement {}

    var HTMLODemoBarSelectElement: {
      prototype: HTMLODemoBarSelectElement;
      new (): HTMLODemoBarSelectElement;
    };
    

    interface HTMLODemoBarToolbarElement extends StencilComponents.ODemoBarToolbar, HTMLStencilElement {}

    var HTMLODemoBarToolbarElement: {
      prototype: HTMLODemoBarToolbarElement;
      new (): HTMLODemoBarToolbarElement;
    };
    

    interface HTMLODemoBarElement extends StencilComponents.ODemoBar, HTMLStencilElement {}

    var HTMLODemoBarElement: {
      prototype: HTMLODemoBarElement;
      new (): HTMLODemoBarElement;
    };
    

    interface HTMLODemoCaseElement extends StencilComponents.ODemoCase, HTMLStencilElement {}

    var HTMLODemoCaseElement: {
      prototype: HTMLODemoCaseElement;
      new (): HTMLODemoCaseElement;
    };
    

    interface HTMLODemoDevicesElement extends StencilComponents.ODemoDevices, HTMLStencilElement {}

    var HTMLODemoDevicesElement: {
      prototype: HTMLODemoDevicesElement;
      new (): HTMLODemoDevicesElement;
    };
    

    interface HTMLODemoFabElement extends StencilComponents.ODemoFab, HTMLStencilElement {}

    var HTMLODemoFabElement: {
      prototype: HTMLODemoFabElement;
      new (): HTMLODemoFabElement;
    };
    

    interface HTMLODemoResizerElement extends StencilComponents.ODemoResizer, HTMLStencilElement {}

    var HTMLODemoResizerElement: {
      prototype: HTMLODemoResizerElement;
      new (): HTMLODemoResizerElement;
    };
    

    interface HTMLODemoSnackbarElement extends StencilComponents.ODemoSnackbar, HTMLStencilElement {}

    var HTMLODemoSnackbarElement: {
      prototype: HTMLODemoSnackbarElement;
      new (): HTMLODemoSnackbarElement;
    };
    

  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {
    'o-demo-bar-buttons': JSXElements.ODemoBarButtonsAttributes;
    'o-demo-bar-select': JSXElements.ODemoBarSelectAttributes;
    'o-demo-bar-toolbar': JSXElements.ODemoBarToolbarAttributes;
    'o-demo-bar': JSXElements.ODemoBarAttributes;
    'o-demo-case': JSXElements.ODemoCaseAttributes;
    'o-demo-devices': JSXElements.ODemoDevicesAttributes;
    'o-demo-fab': JSXElements.ODemoFabAttributes;
    'o-demo-resizer': JSXElements.ODemoResizerAttributes;
    'o-demo-snackbar': JSXElements.ODemoSnackbarAttributes;
    }
  }

  namespace JSXElements {

    export interface ODemoBarButtonsAttributes extends HTMLAttributes {
      'onToolbarButtonClicked'?: (event: CustomEvent) => void;
    }

    export interface ODemoBarSelectAttributes extends HTMLAttributes {
      'onSelectedCaseChanged'?: (event: CustomEvent) => void;
      'options'?: any;
    }

    export interface ODemoBarToolbarAttributes extends HTMLAttributes {
      'name'?: string;
      'options'?: any;
    }

    export interface ODemoBarAttributes extends HTMLAttributes {
      'caseOptionSelected'?: number;
      'device'?: string;
      'deviceEmulate'?: boolean;
      'deviceSize'?: string;
      'events'?: string[];
      'name'?: string;
      'pattern'?: boolean;
    }

    export interface ODemoCaseAttributes extends HTMLAttributes {
      'name'?: string;
    }

    export interface ODemoDevicesAttributes extends HTMLAttributes {
      'orientation'?: string;
    }

    export interface ODemoFabAttributes extends HTMLAttributes {
      'onChange-device'?: (event: CustomEvent) => void;
      'onRotate-device'?: (event: CustomEvent) => void;
    }

    export interface ODemoResizerAttributes extends HTMLAttributes {
      'onResizeButtonClicked'?: (event: CustomEvent) => void;
      'size'?: string;
      'viewport'?: string;
    }

    export interface ODemoSnackbarAttributes extends HTMLAttributes {
      'events'?: any;
    }
  }

  interface HTMLElementTagNameMap {
    'o-demo-bar-buttons': HTMLODemoBarButtonsElement
    'o-demo-bar-select': HTMLODemoBarSelectElement
    'o-demo-bar-toolbar': HTMLODemoBarToolbarElement
    'o-demo-bar': HTMLODemoBarElement
    'o-demo-case': HTMLODemoCaseElement
    'o-demo-devices': HTMLODemoDevicesElement
    'o-demo-fab': HTMLODemoFabElement
    'o-demo-resizer': HTMLODemoResizerElement
    'o-demo-snackbar': HTMLODemoSnackbarElement
  }

  interface ElementTagNameMap {
    'o-demo-bar-buttons': HTMLODemoBarButtonsElement;
    'o-demo-bar-select': HTMLODemoBarSelectElement;
    'o-demo-bar-toolbar': HTMLODemoBarToolbarElement;
    'o-demo-bar': HTMLODemoBarElement;
    'o-demo-case': HTMLODemoCaseElement;
    'o-demo-devices': HTMLODemoDevicesElement;
    'o-demo-fab': HTMLODemoFabElement;
    'o-demo-resizer': HTMLODemoResizerElement;
    'o-demo-snackbar': HTMLODemoSnackbarElement;
  }
}
declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;